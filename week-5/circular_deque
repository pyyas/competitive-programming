class MyCircularDeque:

    def __init__(self, k: int):
        self.data = []
        self.max_len = k
        

    def insertFront(self, value: int) -> bool:
        if len(self.data) == self.max_len:
            return False
        else:
            self.data.insert(0, value)
            return True
        

    def insertLast(self, value: int) -> bool:
        if len(self.data) == self.max_len:
            return False
        else:
            self.data.append(value)
            return True
        

    def deleteFront(self) -> bool:
        if self.data == []:
            return False
        else:
            self.data.pop(0)
            return True
        
        

    def deleteLast(self) -> bool:
        if self.data == []:
            return False
        else:
            self.data.pop()
            return True
        

    def getFront(self) -> int:
        if self.data == []:
            return -1
        else:
            return self.data[0]
            
        

    def getRear(self) -> int:
        if self.data == []:
            return -1
        else:
            return self.data[-1]
        

    def isEmpty(self) -> bool:
        if self.data == []:
            return True
        else:
            return False
        

    def isFull(self) -> bool:
         if len(self.data) == self.max_len:
            return True
         else:
            return False
        
        